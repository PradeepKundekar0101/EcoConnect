{"ast":null,"code":"var _jsxFileName = \"/Users/pradeepkundekar/Desktop/Social_Impact/client/src/components/Events/Events.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport EventBox from '../EventBox/EventBox';\nimport './Events.css';\nimport Navbar from '../NavBar/Navbar';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Events = () => {\n  _s();\n  const [events, setEvents] = useState([]);\n  const [searchText, setSearchText] = useState('');\n  const fetchEvents = async () => {\n    try {\n      const response = await fetch(\"http://localhost:8001/event/\");\n      const json = await response.json();\n      setEvents(json.data);\n    } catch (error) {\n      console.error(error);\n    }\n  };\n  useEffect(() => {\n    fetchEvents();\n  }, []);\n  const filteredEvents = events.filter(event => event.title.toLowerCase().includes(searchText.toLowerCase()));\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"events\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Events\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"filter\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"search-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"search-input\",\n            type: \"text\",\n            placeholder: \"Enter your search...\",\n            value: searchText,\n            onChange: e => setSearchText(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"search-button\",\n            children: \"Search\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: filteredEvents.reverse().map(e => /*#__PURE__*/_jsxDEV(EventBox, {\n          title: e.title,\n          description: e.description,\n          location: e.location,\n          img: `http://localhost:8001/assets/${e.image}`,\n          _id: e._id,\n          participants: e.participants\n        }, e._id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_s(Events, \"6vGpuC54xr7yApE/BR+vqw1Ybg0=\");\n_c = Events;\nexport default Events;\nvar _c;\n$RefreshReg$(_c, \"Events\");","map":{"version":3,"names":["React","useEffect","useState","EventBox","Navbar","jsxDEV","_jsxDEV","Fragment","_Fragment","Events","_s","events","setEvents","searchText","setSearchText","fetchEvents","response","fetch","json","data","error","console","filteredEvents","filter","event","title","toLowerCase","includes","children","fileName","_jsxFileName","lineNumber","columnNumber","className","type","placeholder","value","onChange","e","target","reverse","map","description","location","img","image","_id","participants","_c","$RefreshReg$"],"sources":["/Users/pradeepkundekar/Desktop/Social_Impact/client/src/components/Events/Events.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport EventBox from '../EventBox/EventBox';\nimport './Events.css';\nimport Navbar from '../NavBar/Navbar';\n\nconst Events = () => {\n  const [events, setEvents] = useState([]);\n  const [searchText, setSearchText] = useState('');\n\n  const fetchEvents = async () => {\n    try {\n      const response = await fetch(\"http://localhost:8001/event/\");\n      const json = await response.json();\n      setEvents(json.data);  \n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  useEffect(() => {\n    fetchEvents();\n  }, []);\n\n  const filteredEvents = events.filter(event =>\n    event.title.toLowerCase().includes(searchText.toLowerCase())\n  );\n\n  return (\n    <>\n      <Navbar />\n      <div className='events'>\n        <h1>Events</h1>\n        <div className=\"filter\">\n          <div className=\"search-container\">\n            <input\n              className=\"search-input\"\n              type=\"text\"\n              placeholder=\"Enter your search...\"\n              value={searchText}\n              onChange={(e) => setSearchText(e.target.value)}\n            />\n            <button className=\"search-button\">Search</button>\n          </div>\n        </div>\n        <ul>\n          {filteredEvents.reverse().map((e) => (\n            <EventBox\n              key={e._id}\n              title={e.title}\n              description={e.description}\n              location={e.location}\n              img={`http://localhost:8001/assets/${e.image}`}\n              _id={e._id}\n              participants={e.participants}\n            />\n          ))}\n        </ul>\n      </div>\n    </>\n  );\n};\n\nexport default Events;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}